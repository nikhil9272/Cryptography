/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptography;

import static cryptography.E5.decrypt;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class E11 extends javax.swing.JFrame {

    /**
     * Creates new form E11
     */
    static Socket s;
    public static DataInputStream din;
    public static DataOutputStream dout;

    public E11() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        ip11 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        kee = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        eccc = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        cipher = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Receiver");
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("receive");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 180, 50));

        ip11.setBackground(new java.awt.Color(0, 0, 0));
        ip11.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        ip11.setForeground(new java.awt.Color(255, 255, 255));
        ip11.setText("127.0.0.1");
        ip11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 4));
        ip11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ip11ActionPerformed(evt);
            }
        });
        getContentPane().add(ip11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, 230, 50));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("IP address of server");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Received encrypted message");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Received key");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, -1, -1));

        kee.setBackground(new java.awt.Color(0, 0, 0));
        kee.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        kee.setForeground(new java.awt.Color(255, 255, 255));
        kee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 4));
        kee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keeActionPerformed(evt);
            }
        });
        getContentPane().add(kee, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 230, 50));

        eccc.setBackground(new java.awt.Color(0, 0, 0));
        eccc.setColumns(20);
        eccc.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        eccc.setForeground(new java.awt.Color(255, 255, 255));
        eccc.setRows(5);
        eccc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jScrollPane1.setViewportView(eccc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 300, 140));

        cipher.setBackground(new java.awt.Color(0, 0, 0));
        cipher.setColumns(20);
        cipher.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        cipher.setForeground(new java.awt.Color(255, 255, 255));
        cipher.setRows(5);
        cipher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jScrollPane2.setViewportView(cipher);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 300, 140));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Decrypt");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, 180, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cryptography/bk.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void keeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String str;
        String key;
        int keyLength;
        str = eccc.getText();
        key = kee.getText();
        keyLength = key.length();
        System.out.println(keyLength);
        // String encrypted_result = encrypt(str, keyLength);
        String decrypted_result = decrypt(str, keyLength);
        cipher.setText(decrypted_result + "");
    }//GEN-LAST:event_jButton2ActionPerformed
    public static String decrypt(String str, int keyLength) {
        String decrypted = "";
        for (int i = 0; i < str.length(); i++) {
            //stores ascii value of character in the string at index 'i'
            int c = str.charAt(i);
            //decryption logic for uppercase letters
            if (Character.isUpperCase(c)) {
                c = c - (keyLength % 26);
                //if c value deceed the ascii value of 'A' increase it by adding 26(no.of alphabets) to keep in boundaries of ascii values of 'A' and 'Z'
                if (c < 'A') {
                    c = c + 26;
                }
            } //decryption logic for uppercase letters
            else if (Character.isLowerCase(c)) {
                c = c - (keyLength % 26);
                //if c value deceed the ascii value of 'A' increase it by adding 26(no.of alphabets) to keep in boundaries of ascii values of 'A' and 'Z'
                if (c < 'a') {
                    c = c + 26;
                }
            }
            //concatinate the decrypted characters/strings
            decrypted = decrypted + (char) c;
        }
        return decrypted;
    }
    private void ip11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ip11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ip11ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:String msgin="";
        try {
            //Scanner sc = new Scanner(System.in);
            //System.out.println("Enter IP Address:");

            //String ip = sc.nextLine();
            //System.out.println(ip);
            String ip = ip11.getText();
            System.out.println(ip);
            s = new Socket(ip, 3000);
            System.out.println("Client accepted");
            din = new DataInputStream(s.getInputStream());
            dout = new DataOutputStream(s.getOutputStream());
            int flag1 = 0;
            String msgin = "";
            try {
                while (!msgin.equals("exit")) {

                    msgin = din.readUTF();

                    if (flag1 % 2 == 0) {
                        eccc.setText(msgin);
                    } else {
                        kee.setText(msgin);
                    }
                    flag1++;
                }
            } catch (Exception e) {

            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(E11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(E11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(E11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(E11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new E11().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea cipher;
    private static javax.swing.JTextArea eccc;
    private static javax.swing.JTextField ip11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTextField kee;
    // End of variables declaration//GEN-END:variables
}
